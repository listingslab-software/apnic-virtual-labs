{"version":3,"sources":["redux/app/actions.js","redux/app/reducer.js","redux/index.js","theme/themeLight.js","components/Icon.jsx","components/Lab.jsx","components/VirtualLabs.jsx","components/PageSize.jsx","components/Pagify.jsx","App.jsx","index.jsx"],"names":["error","createAction","labList","loading","loaded","pageSize","currentPage","appSlice","pJSON","appReducer","createReducer","state","action","reduxStore","reducer","combineReducers","app","preloadedState","middleware","getDefaultMiddleware","serializableCheck","configureStore","devTools","process","enhancers","themeLight","palette","type","background","default","paper","primary","main","secondary","Component","useStyles","makeStyles","theme","lab","cursor","borderLeft","paddingLeft","spacing","marginTop","marginBottom","mightyBB","textTransform","display","thumbnail","width","maxWidth","labDescription","marginRight","textAlign","fontSize","labTitle","labDuration","ItemTypes","Lab","id","index","moveCard","ref","useRef","classes","useDrop","accept","hover","item","monitor","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","collect","isDragging","opacity","drag","className","style","onClick","e","preventDefault","window","open","viewDetailsURL","Grid","container","xs","Typography","name","description","formattedDuration","language","src","alt","virtualLabs","progress","pagination","grow","flexGrow","pagify","slider","margin","VirtualLabs","dispatch","useDispatch","useSelector","useCallback","dragCard","update","$splice","Alert","severity","variant","LinearProgress","color","length","PageSize","Pagify","map","i","start","key","renderLab","getValuetext","value","Slider","marks","getAriaValueText","valueLabelDisplay","step","min","max","onChange","val","totalPages","Math","floor","Pagination","size","shape","count","page","newPage","App","React","useEffect","store","getStore","axios","get","then","response","data","catch","console","log","toString","finally","getLabs","createMuiTheme","version","getHistory","createBrowserHistory","ReactDOM","render","DndProvider","backend","HTML5Backend","document","getElementById"],"mappings":"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","file":"static/js/main.1908b585.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit'\nimport { getStore } from '../../'\nimport axios from 'axios'\n\nexport const error = createAction(`APP/ERROR`)\nexport const labList = createAction(`APP/LABLIST`)\nexport const loading = createAction(`APP/LOADING`)\nexport const loaded = createAction(`APP/LOADED`)\nexport const pageSize = createAction(`APP/PAGESIZE`)\nexport const currentPage = createAction(`APP/CURRENTPAGE`)\n\nexport const getLabs = () => {\n\n\tconst store = getStore()\n\tstore.dispatch({type: `APP/LOADING`, loading: true })\n\taxios.get(`https://academy.apnic.net/wp-json/academy/virtual-labs`)\n\t\t.then(function(response) {\n\t\t\t\tstore.dispatch({ type: `APP/LABLIST`, labList: response.data.virtualLabs })\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tconsole.log ('error', error.toString())\n\t\t\t\tstore.dispatch({ type: `APP/ERROR`, error: error.toString() })\n\t\t\t})\n\t\t\t.finally(function() {\n\t\t\t\tstore.dispatch({type: `APP/LOADING`, loading: false })\n\t\t\t\tstore.dispatch({type: `APP/LOADED`, loaded: true })\n\t\t\t})\n}\n","import pJSON from '../../../package.json'\nimport { createReducer } from \"@reduxjs/toolkit\"\nimport {\n  error,\n  labList,\n  loading,\n  loaded,\n  pageSize,\n  currentPage,\n} from \"./actions\"\n\nexport const appSlice = {\n  pJSON,\n  error: false,\n  labList: [],\n  loading: false,\n  loaded: false,\n  pageSize: 3,\n  currentPage: 1,\n}\n\nconst appReducer = createReducer(appSlice, {\n\n  [currentPage]: (state, action) => {\n    state.currentPage = action.currentPage\n    return state\n  },\n  \n  [pageSize]: (state, action) => {\n    state.pageSize = action.pageSize\n    return state\n  },\n\n  [labList]: (state, action) => {\n    state.labList = action.labList\n    return state\n  },\n\n  [loading]: (state, action) => {\n    state.loading = action.loading\n    return state\n  },\n  \n  [loaded]: (state, action) => {\n    state.loaded = action.loaded\n    return state\n  },\n\n  [error]: (state, action) => {\n    state.error = action.error\n    return state\n  },\n\n})\n\nexport { appReducer }","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { combineReducers } from 'redux'\nimport { appReducer, appSlice } from './app/reducer'\n\nconst reduxStore = () => {\n  const reducer = combineReducers({\n    app: appReducer,\n  })\n\n  const preloadedState = {\n    app: appSlice,\n  }\n  \n  const middleware = [\n    ...getDefaultMiddleware({\n      serializableCheck: false\n    })\n  ]\n  const store = configureStore({\n    devTools: process.env.NODE_ENV !== 'production',\n    reducer,\n    middleware,\n    preloadedState,\n    enhancers: []\n  })\n  return store\n}\n\nexport default reduxStore","// https://material-ui.com/customization/default-theme/\n\nexport const themeLight = {  \n  palette: {\n    type: 'light',\n    background: {\n      default: '#fff',\n      paper: '#fff',\n    },\n    primary: {\n      main: '#0079c0',\n    },\n    secondary: {\n      main: '#dc6e00',\n    },\n  }\n}","import React, { Component } from 'react'\nimport IconDefault from '@material-ui/icons/Help'\nimport IconPushtotalk from '@material-ui/icons/TouchApp'\nimport IconClose from '@material-ui/icons/Close'\nimport IconEdit from '@material-ui/icons/Edit'\nimport IconSave from '@material-ui/icons/Save'\nimport IconSignout from '@material-ui/icons/ExitToApp'\nimport IconLeft from '@material-ui/icons/ArrowBack'\nimport IconLink from '@material-ui/icons/Link'\n\nclass Icon extends Component {\n    render() {\n        const {\n            icon,\n            color,\n        } = this.props\n        let iconColor = `primary`\n        if (color) iconColor = color\n        switch (icon) {\n            case `none`:\n                return null\n            case `link`:\n                return (<IconLink color={iconColor} />) \n            case `pushtotalk`:\n                return (<IconPushtotalk color={iconColor} />) \n            case `close`:\n                return (<IconClose color={iconColor} />) \n            case `signout`:\n                return (<IconSignout color={iconColor} />) \n            case `left`:\n                return (<IconLeft color={iconColor} />) \n            case `edit`:\n                return (<IconEdit color={iconColor} />) \n            case `save`:\n                return (<IconSave color={iconColor} />) \n            default: {\n                return (<IconDefault color={iconColor} />)\n            }\n        }\n    }\n}\n\nexport default Icon\n","import React, { useRef } from 'react'\nimport { useDrag, useDrop } from 'react-dnd'\nimport {\n  makeStyles,\n  // ButtonBase,\n  Typography,\n  Grid,\n} from '@material-ui/core/'\n\nconst useStyles = makeStyles(theme => ({\n  lab: {\n      cursor: 'move',\n      borderLeft: '2px solid ' + theme.palette.primary.main,\n      paddingLeft: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n      background: 'white',\n  },\n  mightyBB:{\n    textTransform: 'none',\n    display: 'block',\n  },\n  thumbnail: {\n    width: '100%',\n    maxWidth: 200,\n    marginTop: theme.spacing(2),\n  },\n  labDescription:{\n    marginRight: theme.spacing(2),\n    textAlign: 'left',\n    fontSize: 14,\n  },\n  labTitle:{\n    textAlign: 'left',\n    fontSize: 18,\n  },\n  labDuration:{\n    textAlign: 'left',\n    fontSize: 12,\n  },\n\n}))\n\nexport const ItemTypes = {\n  LAB: 'lab',\n}\n\nexport const Lab = ({ id, lab, index, moveCard }) => {\n  \n  const ref = useRef(null)\n  const classes = useStyles()\n  const [, drop] = useDrop({\n    accept: ItemTypes.LAB,\n    hover(item, monitor) {\n      if (!ref.current) {\n        return\n      }\n      const dragIndex = item.index\n      const hoverIndex = index\n      if (dragIndex === hoverIndex) {\n        return\n      }\n      const hoverBoundingRect = ref.current?.getBoundingClientRect()\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n      const clientOffset = monitor.getClientOffset()\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return\n      }\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return\n      }\n      moveCard(dragIndex, hoverIndex)\n      item.index = hoverIndex\n    },\n  })\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ItemTypes.LAB, id, index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n  const opacity = isDragging ? 0 : 1\n  drag(drop(ref))\n\n  // console.log ('lab', lab)\n\n  return (\n    <div \n      className={classes.lab} \n      ref={ref} \n      style={{ opacity }}>\n      <div\n        className={classes.mightyBB} \n        onClick={(e) => {\n          e.preventDefault()\n          window.open(lab.viewDetailsURL,`_blank`)\n        }}>\n    \n        <Grid container>\n          \n          <Grid item xs={9}>\n            <Typography className={classes.labTitle}>\n              {lab.name}\n            </Typography>\n            \n            <Typography  className={classes.labDescription}>\n              {lab.description}\n            </Typography>\n\n            <Typography  className={classes.labDuration}>\n              {lab.formattedDuration}, {lab.language}\n            </Typography>\n            \n          </Grid>\n\n          <Grid item xs={3}>\n            <img\n              className={classes.thumbnail}\n              src={lab.thumbnail}\n              alt={lab.name}\n            />\n            \n          </Grid>\n\n\n        </Grid>\n\n      </div>\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\nimport update from 'immutability-helper'\nimport { \n    useSelector,\n    useDispatch,\n} from 'react-redux'\nimport {\n  makeStyles,\n  LinearProgress,\n  Typography,\n  Grid,\n} from '@material-ui/core/'\nimport {\n  Alert\n} from '@material-ui/lab/'\nimport { \n  Lab,\n  PageSize,\n  Pagify,\n} from './'\n\nconst useStyles = makeStyles(theme => ({\n\tvirtualLabs: {\n    marginTop: 35,\n    background: 'white',\n\t},\n  progress: {\n    marginTop: 60,\n  },\n  pagination: {\n    textAlign: 'center',\n    marginBottom: theme.spacing(),\n  },\n  grow:{\n    flexGrow: 1,\n  },\n  pagify:{\n    textAlign: 'right',\n  },\n  slider: {\n    marginTop: theme.spacing(),\n  },\n  error:{\n    margin: theme.spacing(),\n  }\n}))\n\nexport default function VirtualLabs() {\n\n\tconst classes = useStyles()\n  const dispatch = useDispatch()\n  const appSlice = useSelector(state => state.app)\n  const {\n    error,\n    labList,\n    loading,\n    loaded,\n    pageSize,\n    currentPage,\n  } = appSlice\n\n  const moveCard = useCallback((dragIndex, hoverIndex) => {\n\t\t\tconst dragCard = labList[dragIndex]\n      dispatch({type: `APP/LABLIST`, labList: update( labList, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, dragCard],\n          ]\n        })}) \n\n\t}, [labList, dispatch])\n    \n  const renderLab = (lab, index) => {\n    return\t<Lab\n\t\t          key={lab.id}\n              lab={lab}\n\t\t          index={index}\n\t\t          id={lab.id}\n\t\t          moveCard={moveCard}\n  \t\t    \t/>\n  }\n\n  if (error) return <Alert \n                        className={classes.error}\n                        severity={`warning`} \n                        variant={'filled'}>\n                        <Typography variant={`h5`}>\n                          { error }\n                        </Typography>\n                    </Alert>\n\n  if (loading && !loaded) return  <div className={classes.progress}>\n                                    <LinearProgress color={`primary`} />\n                                  </div>\n\n  if (!labList.length) return null\n\n  return\t<div className={classes.virtualLabs}>\n              \n              <Grid container className={classes.pagination}>\n                <Grid item xs={3} className={classes.slider}>\n                  <PageSize />\n                </Grid>\n                <Grid item className={classes.grow} />\n                <Grid item>\n                  <div className={classes.pagify}>\n                  <Pagify />\n                  </div>\n                </Grid>\n                \n              </Grid>\n              \n              { labList.map((lab, i) => {\n                const start = pageSize * (currentPage -1)\n                const end = start + pageSize\n                if ( i > start && i <= end) return renderLab(lab, i)\n                  return null\n              })}\n              \n      \t\t</div>\n}\n\n","import React from 'react'\nimport { \n    useSelector,\n    useDispatch,\n} from 'react-redux'\nimport {\n  Slider,\n  Grid,\n  Typography,\n} from '@material-ui/core/'\n\nfunction getValuetext(value) {\n  return `${value}`;\n}\n\nexport default function PageSize() {\n  const dispatch = useDispatch()\n  const appSlice = useSelector(state => state.app)\n  const {\n    pageSize,\n    labList,\n  } = appSlice\n\n  return  <Grid container>\n                <Grid item>\n                  <Typography style={{marginRight: 8, fontSize: 16}}>\n                      {pageSize}\n                  </Typography>\n                </Grid>\n                <Grid item xs={8}>\n                  <Slider\n                      marks\n                      value={pageSize}\n                      getAriaValueText={getValuetext}\n                      valueLabelDisplay=\"auto\"\n                      step={1}\n                      min={2}\n                      max={labList.length}\n                      onChange={(e, val) => {\n                        dispatch({type: `APP/PAGESIZE`, pageSize: val})\n                        dispatch({type: `APP/CURRENTPAGE`, currentPage: 1})\n                      }}\n                    />\n                </Grid>\n                \n              </Grid>\n\n}\n\n\n/*    // or traditional drop down\n\n      <FormControl \n        variant={`outlined`}\n        className={classes.formControl} color={`secondary`}\n      >\n        <Select\n          labelId={`page-size-label`}\n          id={`page-size`}\n          value={pageSize}\n          onChange={onSelect}\n        >\n          <MenuItem value={5}>5</MenuItem>\n          <MenuItem value={10}>10</MenuItem>\n          <MenuItem value={20}>20</MenuItem>\n          <MenuItem value={30}>30</MenuItem>\n        </Select>\n      </FormControl>\n*/\n","import React from 'react'\nimport { \n    useSelector,\n    useDispatch,\n} from 'react-redux'\nimport {\n  Pagination,\n} from '@material-ui/lab/'\n\nexport default function Pagify() {\n\n  const dispatch = useDispatch()\n  const appSlice = useSelector(state => state.app)\n  const {\n    pageSize,\n    currentPage,\n    labList,\n  } = appSlice\n\n  const onChange = (e, newPage) => {\n    dispatch({type: `APP/CURRENTPAGE`, currentPage: newPage})\n  }\n\n  let totalPages = Math.floor(labList.length/pageSize)\n  if (totalPages < 2) return null\n\n  return\t<Pagination \n            size={`small`}\n            color={`primary`}\n            shape={`rounded`}\n  \t  \t\t\tcount={totalPages} \n  \t  \t\t\tpage={currentPage} \n  \t  \t\t\tonChange={onChange} \n  \t  \t\t/>\n}","import React from 'react'\nimport { \n    useSelector,\n} from 'react-redux'\nimport { getLabs } from './redux/app/actions'\nimport { \n  MuiThemeProvider, \n  createMuiTheme,\n  makeStyles,\n} from '@material-ui/core/'\nimport {\n  themeLight,\n} from './theme/'\nimport { \n\tVirtualLabs, \n} from './components'\n\nconst useStyles = makeStyles(theme => ({\n\tapp: {\n\t\tmaxWidth: 580,\n\t\tmargin: 'auto',\n\t\tbackground: 'white',\n\t},\n}))\n\nexport default function App() {\n\n\tconst appSlice = useSelector(state => state.app)\n\tconst {\n\t    loading,\n\t    loaded,\n\t} = appSlice\n\n\tReact.useEffect(() => {\n\t\tif (!loaded && !loading) getLabs()\n    }, [loaded, loading])\n\n\tconst classes = useStyles()\n\treturn\t<MuiThemeProvider theme={createMuiTheme(themeLight)}>\n\t\t\t\t<div className={classes.app} >\n\t\t\t\t\t<VirtualLabs />\n\t\t\t\t</div>\n\t\t\t</MuiThemeProvider>\n}\n","import pJSON from '../package.json'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createBrowserHistory } from 'history'\nimport reduxStore from './redux'\nimport { Provider } from 'react-redux'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport App from './App'\n\nconsole.log(`${pJSON.name} ${pJSON.version}`)\n\nconst store = reduxStore()\nexport const getStore = () => { return store }\n\nconst getHistory = () => { return createBrowserHistory() }\nexport { getHistory }\n\nReactDOM.render(\n  <Provider store={store}>\n  \t<DndProvider backend={HTML5Backend}>\n    \t<App />\n    </DndProvider>\n  </Provider>,\n  document.getElementById('apnic')\n)\n"],"sourceRoot":""}